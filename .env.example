# Claude Automation System - 環境変数設定例
# このファイルをコピーして .env として使用してください
# cp .env.example .env

# =====================================
# GitHub設定（必須）
# =====================================
GITHUB_TOKEN=your_github_personal_access_token_here
GITHUB_USERNAME=your_github_username

# Personal Access Token作成方法:
# 1. GitHub → Settings → Developer settings → Personal access tokens
# 2. Generate new token (classic)
# 3. 必要なスコープ: repo, workflow, public_repo

# =====================================
# Claude設定
# =====================================
# Claude Code CLIで自動設定される場合は不要
# ANTHROPIC_API_KEY=your_anthropic_api_key

# =====================================
# Slack連携（オプション）
# =====================================
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
# SLACK_CHANNEL=#dev-automation
# SLACK_USERNAME=Claude Automation Bot

# Slack Webhook URL作成方法:
# 1. Slack → Apps → Incoming Webhooks
# 2. Add to Slack → チャンネル選択
# 3. Webhook URLをコピー

# =====================================
# Jira連携（オプション）
# =====================================
# JIRA_BASE_URL=https://your-domain.atlassian.net
# JIRA_USERNAME=your_email@example.com
# JIRA_API_TOKEN=your_jira_api_token
# JIRA_PROJECT_KEY=AUTO

# Jira API Token作成方法:
# 1. Atlassian Account → Security → API tokens
# 2. Create API token
# 3. トークンをコピー

# =====================================
# ログ設定
# =====================================
LOG_LEVEL=info
# 利用可能なレベル: debug, info, warn, error

# ログファイルパス（オプション）
# LOG_FILE=/var/log/claude-automation/claude-automation.log

# =====================================
# システム設定
# =====================================
# プロジェクトのホームディレクトリ
CLAUDE_AUTO_HOME=/opt/claude-automation

# タイムゾーン
TZ=Asia/Tokyo

# 最大同時実行数
# MAX_CONCURRENT_PROCESSES=3

# =====================================
# 開発/デバッグ設定
# =====================================
# デバッグモード（本番では false）
# DEBUG=false

# 詳細ログ出力
# VERBOSE=false

# ドライランモード（実際の処理を行わない）
# DRY_RUN=false

# =====================================
# セキュリティ設定
# =====================================
# ワークスペースの自動クリーンアップ（時間単位）
# WORKSPACE_CLEANUP_HOURS=24

# 実行履歴の保持期間（日数）
# EXECUTION_HISTORY_DAYS=30

# =====================================
# パフォーマンス設定
# =====================================
# GitHub API リクエスト間隔（ミリ秒）
# GITHUB_REQUEST_DELAY=1000

# Claude API タイムアウト（秒）
# CLAUDE_TIMEOUT=300

# =====================================
# 通知設定
# =====================================
# 成功時の通知を無効化
# NOTIFY_SUCCESS=false

# エラー時の通知を有効化
# NOTIFY_ERROR=true

# =====================================
# Docker特有の設定
# =====================================
# Dockerコンテナ内で動作する場合のみ設定

# ホストのDockerソケットマウント
# DOCKER_SOCKET=/var/run/docker.sock

# コンテナ内でのユーザーID
# USER_ID=1000
# GROUP_ID=1000