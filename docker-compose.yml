version: '3.8'

services:
  claude-automation:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-automation
    restart: unless-stopped
    
    # 環境変数
    environment:
      - CLAUDE_AUTO_HOME=/opt/claude-automation
      - TZ=Asia/Tokyo
      - LOG_LEVEL=info
      
    # 環境変数ファイル（ローカルで作成）
    env_file:
      - .env
    
    # ボリュームマウント
    volumes:
      # 設定ファイル（ホストで管理）
      - ./config:/opt/claude-automation/config:ro
      # ログファイル（永続化）
      - claude-logs:/var/log/claude-automation
      - claude-workspace:/opt/claude-automation/workspace
      # Docker socket（必要に応じて）
      # - /var/run/docker.sock:/var/run/docker.sock:ro
    
    # ネットワーク設定
    networks:
      - claude-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # ログ設定
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  # オプション: 監視用のサービス
  watchtower:
    image: containrrr/watchtower:arm64v8-latest
    container_name: claude-automation-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: claude-automation
    profiles:
      - monitoring

  # オプション: Prometheus監視
  prometheus:
    image: prom/prometheus:latest
    container_name: claude-automation-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # オプション: Grafana ダッシュボード
  grafana:
    image: grafana/grafana:latest
    container_name: claude-automation-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    profiles:
      - monitoring

# ボリューム定義
volumes:
  claude-logs:
    driver: local
  claude-workspace:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# ネットワーク定義
networks:
  claude-network:
    driver: bridge